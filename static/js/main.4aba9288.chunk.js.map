{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/AddTodo.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","TodoItem","props","todo","item","markCompleted","deleteItem","todoItemStyle","borderBottom","backgroundColor","completed","textDecoration","style","title","type","checked","onChange","id","border","float","onClick","AddTodo","useState","setTitle","addTodo","name","value","placeholder","event","target","preventDefault","Todo","useEffect","a","axios","get","result","setTodos","data","console","log","getTodos","listItem","Todos","items","newItems","map","delete","filter","post","uuidv4","isCompleted","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4aba9288.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header>\n            <h1>TODO LIST</h1>\n        </header>\n    );\n};\n\nexport default Header;\n","import propTypes from 'prop-types';\nconst TodoItem = (props) => {\n    const todo = props.item;\n    const markCompleted = props.markCompleted;\n    const deleteItem = props.deleteItem;\n    const todoItemStyle = {\n        borderBottom: '1px solid #ff8ff8',\n        backgroundColor: todo.completed ? '#f3f3' : '#ffe4ee',\n        textDecoration: todo.completed ? 'line-through' : 'none',\n    };\n    const deleteButtonStyle = {\n        backgroundColor: '#fff3',\n        border: '1px solid #fff dotted',\n        float: 'right',\n    };\n    return (\n        <div>\n            <p style={todoItemStyle}>\n                {todo.title}\n                <input\n                    type=\"checkbox\"\n                    checked={todo.completed}\n                    onChange={() => markCompleted(todo.id)}\n                />\n                <button\n                    style={deleteButtonStyle}\n                    onClick={() => deleteItem(todo.id)}\n                >\n                    Delete\n                </button>\n            </p>\n        </div>\n    );\n};\nTodoItem.propTypes = {\n    item: propTypes.object.isRequired,\n    markCompleted: propTypes.func.isRequired,\n};\nexport default TodoItem;\n","import { useState } from 'react';\nconst AddTodo = (props) => {\n    const [title, setTitle] = useState('');\n\n    const changeTitle = (event) => {\n        setTitle(event.target.value);\n    };\n    const addTodo = props.addTodo;\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (title !== '') {\n            addTodo(title);\n            setTitle('');\n        }\n    };\n    return (\n        <form>\n            <input\n                type=\"text\"\n                name=\"title\"\n                value={title}\n                placeholder=\"Add job\"\n                onChange={changeTitle}\n            />\n            <button type=\"submit\" onClick={handleSubmit}>\n                Add\n            </button>\n        </form>\n    );\n};\n\nexport default AddTodo;\n","import { useState, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport AddTodo from './AddTodo';\nimport { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nconst Todo = () => {\n    useEffect(() => {\n        const getTodos = async () => {\n            try {\n                const result = await axios.get(\n                    'https://jsonplaceholder.typicode.com/todos?_limit=20',\n                );\n                setTodos(result.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        getTodos();\n    }, []);\n    // this.getTodos();\n    const listItem = [];\n    const [Todos, setTodos] = useState(listItem);\n    const items = listItem;\n    const markCompleted = (id) => {\n        const newItems = Todos.map((todo) => {\n            if (todo.id === id) todo.completed = !todo.completed;\n            return todo;\n        });\n        setTodos(newItems);\n    };\n    const deleteItem = async (id) => {\n        try {\n            await axios.delete(\n                'https://jsonplaceholder.typicode.com/todos/' + id,\n            );\n            const newItems = Todos.filter((todo) => todo.id !== id);\n            setTodos(newItems);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const addTodo = async (todo) => {\n        // const newTodos = [\n        //     { id: uuidv4(), title: todo, completed: false },\n        //     ...Todos,\n        // ];\n        // setTodos(newTodos);\n        try {\n            const result = await axios.post(\n                'https://jsonplaceholder.typicode.com/todos',\n                { id: uuidv4(), title: todo, isCompleted: false },\n            );\n            setTodos([result.data, ...Todos]);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <div>\n            <AddTodo addTodo={addTodo} />\n            <button onClick={() => setTodos([])}>Delete all</button>\n            <button onClick={() => setTodos(items)}>Restore</button>\n            {Todos.map((value) => {\n                return (\n                    <TodoItem\n                        key={value.id}\n                        item={value}\n                        markCompleted={markCompleted}\n                        deleteItem={deleteItem}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Todo;\n","import './App.css';\nimport Header from './components/Header';\nimport Todo from './components/Todo';\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Todo />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}