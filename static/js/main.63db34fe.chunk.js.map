{"version":3,"sources":["components/Header.js","components/TodoItem.js","components/AddTodo.js","components/Todo.js","App.js","reportWebVitals.js","index.js"],"names":["Header","TodoItem","props","todo","item","markCompleted","deleteItem","todoItemStyle","borderBottom","backgroundColor","completed","textDecoration","style","title","type","className","checked","onChange","id","Button","border","float","color","onClick","AddTodo","useState","setTitle","addTodo","name","value","placeholder","event","target","preventDefault","Todo","useEffect","a","axios","get","result","setTodos","data","console","log","getTodos","document","Todos","length","count","setCount","listItem","items","newItems","map","delete","filter","post","isCompleted","reload","limit","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.63db34fe.chunk.js","sourcesContent":["const Header = () => {\n    return (\n        <header>\n            <h1>TODO LIST</h1>\n        </header>\n    );\n};\n\nexport default Header;\n","import propTypes from 'prop-types';\nimport { Button } from 'react-bootstrap';\nconst TodoItem = (props) => {\n    const todo = props.item;\n    const markCompleted = props.markCompleted;\n    const deleteItem = props.deleteItem;\n    const todoItemStyle = {\n        borderBottom: '1px solid #ff8ff8',\n        backgroundColor: todo.completed ? '#f3f3' : '#ffe4ee',\n        textDecoration: todo.completed ? 'line-through' : 'none',\n    };\n    const deleteButtonStyle = {\n        backgroundColor: '#fff3',\n        border: '1px solid #fff dotted',\n        float: 'right',\n    };\n    return (\n        <div>\n            <p style={todoItemStyle}>\n                {todo.title}\n                <input\n                    type=\"checkbox\"\n                    className=\"form-control\"\n                    checked={todo.completed}\n                    onChange={() => markCompleted(todo.id)}\n                />\n                <Button\n                    style={deleteButtonStyle}\n                    color=\"primary\"\n                    onClick={() => deleteItem(todo.id)}\n                >\n                    Delete\n                </Button>\n            </p>\n        </div>\n    );\n};\nTodoItem.propTypes = {\n    item: propTypes.object.isRequired,\n    markCompleted: propTypes.func.isRequired,\n};\nexport default TodoItem;\n","import { useState } from 'react';\nconst AddTodo = (props) => {\n    const [title, setTitle] = useState('');\n\n    const changeTitle = (event) => {\n        setTitle(event.target.value);\n    };\n    const addTodo = props.addTodo;\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        if (title !== '') {\n            addTodo(title);\n            setTitle('');\n        }\n    };\n    return (\n        <form>\n            <input\n                type=\"text\"\n                name=\"title\"\n                value={title}\n                placeholder=\"Add job\"\n                onChange={changeTitle}\n            />\n            <button type=\"submit\" onClick={handleSubmit}>\n                Add\n            </button>\n        </form>\n    );\n};\n\nexport default AddTodo;\n","import { useState, useEffect } from 'react';\nimport TodoItem from './TodoItem';\nimport AddTodo from './AddTodo';\n// import { v4 as uuidv4 } from 'uuid';\nimport axios from 'axios';\nimport { Button } from 'react-bootstrap';\nconst Todo = () => {\n    useEffect(() => {\n        const getTodos = async () => {\n            try {\n                const result = await axios.get(\n                    'https://jsonplaceholder.typicode.com/todos?_limit=20',\n                );\n                setTodos(result.data);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n        getTodos();\n    }, []);\n    useEffect(() => {\n        document.title = `Total ${Todos.length} job`;\n    });\n    const [count, setCount] = useState(0);\n    // this.getTodos();\n    const listItem = [];\n    const [Todos, setTodos] = useState(listItem);\n    const items = listItem;\n    const markCompleted = (id) => {\n        const newItems = Todos.map((todo) => {\n            if (todo.id === id) todo.completed = !todo.completed;\n            return todo;\n        });\n        setTodos(newItems);\n    };\n    const deleteItem = async (id) => {\n        try {\n            await axios.delete(\n                'https://jsonplaceholder.typicode.com/todos/' + id,\n            );\n            const newItems = Todos.filter((todo) => todo.id !== id);\n            setTodos(newItems);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const addTodo = async (todo) => {\n        // const newTodos = [\n        //     { id: uuidv4(), title: todo, completed: false },\n        //     ...Todos,\n        // ];\n        // setTodos(newTodos);\n        try {\n            const result = await axios.post(\n                'https://jsonplaceholder.typicode.com/todos',\n                { id: 202, title: todo, isCompleted: false },\n            );\n            setTodos([result.data, ...Todos]);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const reload = async (limit) => {\n        try {\n            const result = await axios.get(\n                'https://jsonplaceholder.typicode.com/todos?_limit=' + limit,\n            );\n            console.log(result.data);\n            setTodos([...Todos, ...result.data]);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <div>\n            <AddTodo addTodo={addTodo} />\n            <Button onClick={() => reload(200)}>Load 200 todo</Button>\n            <button onClick={() => setCount(count + 1)}>\n                Click time: {count}\n            </button>\n            <button onClick={() => setTodos([])}>\n                Delete all ({Todos.length})\n            </button>\n            <button onClick={() => setTodos(items)}>Restore</button>\n            {Todos.map((value) => {\n                return (\n                    <TodoItem\n                        key={value.id}\n                        item={value}\n                        markCompleted={markCompleted}\n                        deleteItem={deleteItem}\n                    />\n                );\n            })}\n        </div>\n    );\n};\n\nexport default Todo;\n","import './App.css';\nimport Header from './components/Header';\nimport Todo from './components/Todo';\nconst App = () => {\n    return (\n        <div className=\"App\">\n            <Header />\n            <Todo />\n        </div>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}